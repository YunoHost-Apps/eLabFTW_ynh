#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

secret_key=$(ynh_string_random --length=137)
ynh_app_setting_set --key="secret_key" --value="$secret_key"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing NodeJS..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir/sources"
mkdir -p "$install_dir/sources/"{cache,uploads}

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:www-data" "$install_dir"
#=================================================
# INSTALL AND INITIALIZE COMPOSER
#=================================================
ynh_script_progression "Installing $app with Composer..."

pushd "$install_dir/sources"
    ynh_composer_install
ynh_composer_exec install --no-dev  # FIXMEhelpers2.1 (replace with composer_workdir=... prior to calling this helper, default is $intall_dir) --workdir="$install_dir/sources" --no-dev

    ynh_hide_warnings ynh_exec_as_app node_load_PATH" yarn install --pure-lockfile --prod
    ynh_hide_warnings ynh_exec_as_app node_load_PATH" yarn run buildall

    ynh_composer_exec # FIXMEhelpers2.1 (replace with composer_workdir=... prior to calling this helper, default is $intall_dir) --workdir="$install_dir/sources" install --prefer-dist --no-cache --no-progress --no-dev -a

    ynh_safe_rm node_modules
    ynh_hide_warnings ynh_exec_as_app node_load_PATH" yarn cache clean

    ynh_config_add --template="config.php" --destination="$install_dir/sources/config.php"
    ynh_exec_as_app "php$php_version" "bin/install" start -q
popd

# ynh_script_progression "Configuring LDAP and emails..."
# ynh_config_add --template="sql.template" --destination="$install_dir/ldap_sql"
# ynh_mysql_db_shell < "$install_dir/ldap_sql"
# ynh_safe_rm "$install_dir/ldap_sql"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:www-data" "$install_dir"
#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated PHP-FPM config
ynh_config_add_phpfpm

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
